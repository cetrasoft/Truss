/*  _font.sass
 *
 *  This module contains classes for setting font sizes for text and headers. The
 *  header classes are used so that a header element does not need to be restricted
 *  to a default font-size, especially since those defaults are usually reset. 
 *
 *  @project Truss
 *  @author Carlos Ramirez III, Ryan Jafari
 *  @copyright 2011
 */
/* Sometimes you want to set a different font-weight for bold text */
/*  Fonts
 *
 *  xx-sm  9x
 *  x-sm   10px
 *  sm     13px
 *  med    16px
 *  lg     18px
 *  x-lg   24px
 *  xx-lg  32px
 */
.xx-sm {
  font-size: xx-small; }

.x-sm, .h6 {
  font-size: x-small; }

.sm, .h5 {
  font-size: small; }

.med, .h4 {
  font-size: medium; }

.lg, .h3 {
  font-size: large; }

.x-lg, .h2 {
  font-size: x-large; }

.xx-lg, .h1 {
  font-size: xx-large; }

/*  Headers
 */
.h1, .h2, .h3, .h4, .h5, .h6 {
  font-weight: bold; }

/*  
 *  _grid.scss
 *
 *  This is the framework's 'grid' module. It uses a simple, percent-based grid system with
 *  multiples of 1/3s, 1/4s, and 1/5s.
 *
 *  The user must set the main grid's fixed-width manually, e.g.:
 *
 *  .main { margin: 0 auto; width: 960px; }
 *
 *  @project Truss
 *  @author Carlos Ramirez III, Ryan Jafari
 *  @copyright 2011
 */
.dp-base, .dp20,
.dp25,
.dp33,
.dp40,
.dp50,
.dp60,
.dp66,
.dp75,
.dp80,
.dp100 {
  float: left; }

.dp20 {
  width: 20%; }

.dp25 {
  width: 25%; }

.dp33 {
  width: 33.33%; }

.dp40 {
  width: 40%; }

.dp50 {
  width: 50%; }

.dp60 {
  width: 60%; }

.dp66 {
  width: 66.66%; }

.dp75 {
  width: 75%; }

.dp80 {
  width: 80%; }

.dp100 {
  width: 100%; }

/*  
 *  _shift.scss
 *
 *  This module contains a set of classes which provide spacing between elements.
 *
 *  @project Truss
 *  @author Carlos Ramirez III, Ryan Jafari
 *  @copyright 2011
 */
.shf-dwn-xs {
  margin-top: 5px; }

.shf-dwn-s {
  margin-top: 10px; }

.shf-dwn-m {
  margin-top: 15px; }

.shf-dwn-l {
  margin-top: 20px; }

.shf-dwn-xl {
  margin-top: 25px; }

.shf-dwn-xxl {
  margin-top: 30px; }

.shf-rgt-xs {
  margin-left: 5px; }

.shf-rgt-s {
  margin-left: 10px; }

.shf-rgt-m {
  margin-left: 15px; }

.shf-rgt-l {
  margin-left: 20px; }

.shf-rgt-xl {
  margin-left: 25px; }

.shf-rgt-xxl {
  margin-left: 30px; }

/*  _cushion.sass
 *
 *  This module contains a set of classes which provide spacing within an element. These classes should
 *  be used as base classes from which to inherit when constructing new skins, e.g.:
 *
 *  .call-out { @extend .csn-m; background: light-blue; ... etc. }
 *
 *  Each cushion class has modifier classes available to optionally remove paddings. If you declare
 *  project-specific cushions, you can use the 'csn-modifiers' mixin to gain access to them.
 *
 *  @project Truss
 *  @author Carlos Ramirez III, Ryan Jafari
 *  @copyright 2011
 */
.csn-xs {
  padding: 5px; }
  .csn-xs.no-top {
    padding-top: 0; }
  .csn-xs.no-bot {
    padding-bottom: 0; }
  .csn-xs.no-sides {
    padding-left: 0;
    padding-right: 0; }

.csn-s {
  padding: 10px; }
  .csn-s.no-top {
    padding-top: 0; }
  .csn-s.no-bot {
    padding-bottom: 0; }
  .csn-s.no-sides {
    padding-left: 0;
    padding-right: 0; }

.csn-m {
  padding: 15px; }
  .csn-m.no-top {
    padding-top: 0; }
  .csn-m.no-bot {
    padding-bottom: 0; }
  .csn-m.no-sides {
    padding-left: 0;
    padding-right: 0; }

.csn-l {
  padding: 20px; }
  .csn-l.no-top {
    padding-top: 0; }
  .csn-l.no-bot {
    padding-bottom: 0; }
  .csn-l.no-sides {
    padding-left: 0;
    padding-right: 0; }

.csn-xl {
  padding: 25px; }
  .csn-xl.no-top {
    padding-top: 0; }
  .csn-xl.no-bot {
    padding-bottom: 0; }
  .csn-xl.no-sides {
    padding-left: 0;
    padding-right: 0; }

.csn-xxl {
  padding: 30px; }
  .csn-xxl.no-top {
    padding-top: 0; }
  .csn-xxl.no-bot {
    padding-bottom: 0; }
  .csn-xxl.no-sides {
    padding-left: 0;
    padding-right: 0; }

/*  _border.sass
 *
 *  This module facilitates adding borders around an element. Modifiers allow control over which
 *  sides of the border are visible. It is the responsibility of consumer to specify the color of
 *  the border, e.g.:
 *
 *  .error-box { @extend .bordered; border-color: red; }
 *
 *  @project Truss
 *  @author Carlos Ramirez III, Ryan Jafari
 *  @copyright 2011
 */
.bordered {
  border: 1px solid; }
  .bordered.no-top {
    border-top: 0; }
  .bordered.no-bot {
    border-bottom: 0; }
  .bordered.no-sides {
    border-left: 0;
    border-right: 0; }
  .bordered.top-only {
    border-left: 0;
    border-right: 0;
    border-bottom: 0; }
  .bordered.bot-only {
    border-left: 0;
    border-top: 0;
    border-right: 0; }
  .bordered.lft-only {
    border-top: 0;
    border-right: 0;
    border-bottom: 0; }
  .bordered.rgt-only {
    border-left: 0;
    border-top: 0;
    border-bottom: 0; }

/*
 *  This module was borrowed from the amazing 'Bourbon' gem by Thoughtbot
 *  https://github.com/thoughtbot/bourbon
 */
/*
 *  This module was borrowed from the amazing 'Bourbon' gem by Thoughtbot
 *  https://github.com/thoughtbot/bourbon
 */
/*  _media.sass
 *
 *  This module houses the 'media' component. A media object consists of some element (image, icon, text, link, etc.)
 *  adjacent to another element. A vertical alignment between the two elements can be easily specified and additional
 *  elements based on the media object can be used to create horizontal spacing between elements.
 *
 *  @project Truss
 *  @author Carlos Ramirez III, Ryan Jafari
 *  @copyright 2011
 */
/*  The media element uses Flexbox display by default. The elements will flow horizontally and are
 *  vertically aligned to the center by default.
 */
.media {
  display: -webkit-box;
  display: -moz-box;
  display: box;
  -webkit-box-orient: horizontal;
  -moz-box-orient: horizontal;
  box-orient: horizontal;
  -webkit-box-align: center;
  -moz-box-align: center;
  box-align: center; }
  .media > .left {
    margin-right: 5px; }
  .media > .right {
    margin-left: 5px; }
    .media > .right > img {
      vertical-align: middle; }

/* This media element is vertically aligned to the top */
.media.top {
  -webkit-box-align: start;
  -moz-box-align: start;
  box-align: start; }

/* This media element is vertically aligned to the bottom */
.media.bottom {
  -webkit-box-align: end;
  -moz-box-align: end;
  box-align: end; }

/* This media element is vertically aligned to the baseline */
.media.baseline {
  -webkit-box-align: baseline;
  -moz-box-align: baseline;
  box-align: baseline; }

/*  The 'gap' media element floats the left and right elements to either side of the container.
 */
.media.gap {
  width: 100%; }
  .media.gap > .right {
    -webkit-box-flex: 1;
    -moz-box-flex: 1;
    box-flex: 1;
    text-align: right; }
    .media.gap > .right > .wrap {
      float: right; }

/*  The 'dual' media element floats the left and right elements to either side of the container in addition
 *  to having an element which appears centered in the space between.
 */
.media.dual {
  width: 100%;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  -ms-box-sizing: border-box;
  -o-box-sizing: border-box;
  box-sizing: border-box; }
  .media.dual > .center {
    -webkit-box-flex: 1;
    -moz-box-flex: 1;
    box-flex: 1;
    text-align: center; }

/*  _media_fallback.sass
 *
 *  This file contains fallback styling for the 'media' component. For non-flexbox browsers, table-cell display will be
 *  used. For browsers which don't support table-cell (IE6, IE7), inline-block will be used. 
 *
 *  NOTE: This fallback module relies on browser feature detection provided by head.js or modernizr.js
 *
 *  http://headjs.com/
 *  http://www.modernizr.com/
 *  
 *  @project Truss
 *  @author Carlos Ramirez III, Ryan Jafari
 *  @copyright 2011
 */
.no-flexbox .media {
  display: table; }
  .no-flexbox .media > .left, .no-flexbox .media > .right {
    display: table-cell;
    vertical-align: middle; }
    .no-flexbox .media > .left img, .no-flexbox .media > .right img {
      vertical-align: middle; }
  .no-flexbox .media > .left {
    padding-right: 5px; }
  .no-flexbox .media > .right {
    padding-left: 5px;
    text-align: right; }
.no-flexbox.lt-ie8 .media > .left, .no-flexbox.lt-ie8 .media > .right {
  zoom: 1;
  *display: inline; }

.no-flexbox .media.top > .left, .no-flexbox .media.top > .right {
  vertical-align: top; }
  .no-flexbox .media.top > .left img, .no-flexbox .media.top > .right img {
    vertical-align: top; }

.no-flexbox .media.bottom > .left, .no-flexbox .media.bottom > .right {
  vertical-align: bottom; }
  .no-flexbox .media.bottom > .left img, .no-flexbox .media.bottom > .right img {
    vertical-align: bottom; }

/*
 *  This module was borrowed from the amazing 'Bourbon' gem by Thoughtbot
 *  https://github.com/thoughtbot/bourbon
 */
/*  _list.sass
 *
 *  This module is used for creating lists.
 *
 *  @project Truss
 *  @author Carlos Ramirez III, Ryan Jafari
 *  @copyright 2011
 */
/*  This is a basic list of horizontal items. Flexbox layout is used to arrange the items
 *  horizontally and vertically align them to the center.
 */
ul.horizontal {
  list-style: none;
  padding: 0;
  margin: 0;
  display: -webkit-box;
  display: -moz-box;
  display: box;
  -webkit-box-orient: horizontal;
  -moz-box-orient: horizontal;
  box-orient: horizontal;
  -webkit-box-align: center;
  -moz-box-align: center;
  box-align: center; }
  ul.horizontal > li:not(:first-child) {
    margin-left: 5px; }
  ul.horizontal > li:not(:last-child) {
    margin-right: 5px; }

/*  _list_fallback.sass
 *
 *  This file contains fallback styling for the 'list' module. For non-flexbox browsers, floating will
 *  be used.
 *
 *  NOTE: This fallback module relies on browser feature detection provided by head.js or modernizr.js
 *
 *  http://headjs.com/
 *  http://www.modernizr.com/
 *  
 *  @project Truss
 *  @author Carlos Ramirez III, Ryan Jafari
 *  @copyright 2011
 */
 *
 * ul.horizontal
 *  .no-flexbox &
 *    overflow: auto
 *    .media
 *      display: block
 *    li
 *      float: left
 *      a
 *        float: left */
